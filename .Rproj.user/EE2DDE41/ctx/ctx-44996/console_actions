{
    "type": [
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        3,
        3
    ],
    "data": [
        "\nR version 4.0.3 (2020-10-10) -- \"Bunny-Wunnies Freak Out\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(tidyverse)",
        "\u001B[37m── \u001B[1mAttaching packages\u001B[22m ──────────────────────────────────────── tidyverse 1.3.0 ──\u001B[39m\n",
        "\u001B[37m\u001B[32m✓\u001B[37m \u001B[34mggplot2\u001B[37m 3.3.3     \u001B[32m✓\u001B[37m \u001B[34mpurrr  \u001B[37m 0.3.4\n\u001B[32m✓\u001B[37m \u001B[34mtibble \u001B[37m 3.1.0     \u001B[32m✓\u001B[37m \u001B[34mdplyr  \u001B[37m 1.0.5\n\u001B[32m✓\u001B[37m \u001B[34mtidyr  \u001B[37m 1.1.3     \u001B[32m✓\u001B[37m \u001B[34mstringr\u001B[37m 1.4.0\n\u001B[32m✓\u001B[37m \u001B[34mreadr  \u001B[37m 1.4.0     \u001B[32m✓\u001B[37m \u001B[34mforcats\u001B[37m 0.5.0\u001B[39m\n",
        "\u001B[37m── \u001B[1mConflicts\u001B[22m ─────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mfilter()\u001B[37m masks \u001B[34mstats\u001B[37m::filter()\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mlag()\u001B[37m    masks \u001B[34mstats\u001B[37m::lag()\u001B[39m\n",
        "> ",
        "library(lme4)",
        "Loading required package: Matrix\n",
        "\nAttaching package: ‘Matrix’\n\n",
        "The following objects are masked from ‘package:tidyr’:\n\n    expand, pack, unpack\n\n",
        "> ",
        "popular <- read_csv(here::here(\"data\", \"popularity.csv\"))",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  pupil = \u001B[32mcol_double()\u001B[39m,\n  class = \u001B[32mcol_double()\u001B[39m,\n  extrav = \u001B[32mcol_double()\u001B[39m,\n  sex = \u001B[31mcol_character()\u001B[39m,\n  texp = \u001B[32mcol_double()\u001B[39m,\n  popular = \u001B[32mcol_double()\u001B[39m,\n  popteach = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "> ",
        "m <- lmer(popular ~ extrav + (extrav|class), popular,",
        "+ ",
        "          control = lmerControl(optimizer = \"bobyqa\"))",
        "> ",
        "arm::display(m)",
        "lmer(formula = popular ~ extrav + (extrav | class), data = popular, \n    control = lmerControl(optimizer = \"bobyqa\"))\n            coef.est coef.se\n(Intercept) 2.46     0.20   \nextrav      0.49     0.03   \n\nError terms:\n Groups   Name        Std.Dev. Corr  \n class    (Intercept) 1.73           \n          extrav      0.16     -0.97 \n Residual             0.95           \n---\nnumber of obs: 2000, groups: class, 100\nAIC = 5791.4, DIC = 5762\ndeviance = 5770.7 \n",
        "> ",
        "slr <- lm(popular ~ extrav, popular)",
        "> ",
        "slr",
        "\nCall:\nlm(formula = popular ~ extrav, data = popular)\n\nCoefficients:\n(Intercept)       extrav  \n     3.2728       0.3459  \n\n",
        "> ",
        "ggplot(popular, aes(extrav, popular)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_smooth(se = FALSE, method = \"lm\")",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "> ",
        "sample_preds <- popular %>%",
        "+ ",
        "  group_by(class) %>%",
        "+ ",
        "  slice(1) %>%",
        "+ ",
        "  ungroup %>%",
        "+ ",
        "  slice(1:4)",
        "> ",
        "sample_preds",
        "\u001B[38;5;246m# A tibble: 4 x 7\u001B[39m\n  pupil class extrav sex    texp popular popteach\n  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m     1     1      5 girl     24     6.3        6\n\u001B[38;5;250m2\u001B[39m     1     2      8 girl     14     6.4        6\n\u001B[38;5;250m3\u001B[39m     1     3      5 boy      13     4.2        4\n\u001B[38;5;250m4\u001B[39m     1     4      3 girl     20     4.1        4\n",
        "> ",
        "# Fixed effects",
        "> ",
        "f <- fixef(m)",
        "> ",
        "f",
        "(Intercept)      extrav \n  2.4610234   0.4928571 \n",
        "> ",
        "# Classroom deviations",
        "> ",
        "r <- ranef(m)",
        "> ",
        "r",
        "$class\n    (Intercept)       extrav\n1    0.34095954 -0.027014677\n2   -1.17798954  0.096974668\n3   -0.62937002  0.057097182\n4    1.08529708 -0.099953042\n5   -0.19489641  0.021601800\n6   -0.98339230  0.083762531\n7   -1.00065422  0.064825024\n8   -2.31344585  0.203883548\n9   -0.72390121  0.076936163\n10   0.81714889 -0.088190958\n11  -0.80165382  0.053642262\n12  -0.50559454  0.035562482\n13   1.94465792 -0.163675650\n14  -4.60442503  0.379805874\n15  -0.95627606  0.092420531\n16  -0.63300242  0.038113732\n17   0.39246763",
        " -0.023686639\n18   2.28824205 -0.199172763\n19   1.11955746 -0.088677713\n20   0.21949255  0.001085573\n21   0.26728615 -0.047272343\n22   2.29791264 -0.192289863\n23   0.33161921 -0.024183133\n24  -1.35638924  0.114938066\n25  -0.01994683 -0.011555948\n26  -1.25402662  0.107101274\n27  -1.19545641  0.114147749\n28  -0.44502470  0.014290982\n29   2.03871407 -0.180129251\n30  -1.40054893  0.109698011\n31  -1.79566145  0.205412272\n32  -0.34719881  0.051159472\n33   2.12578123 -0.136367830\n34  -0.98425888  0.101445482\n35   3.63820003",
        " -0.322359287\n36   0.91322197 -0.111514042\n37   0.30465672 -0.016094329\n38  -0.51579961  0.044299138\n39   0.61982719 -0.065503359\n40  -1.37549168  0.146964064\n41  -1.59793019  0.120798718\n42   0.45790261 -0.028187295\n43   0.71853077 -0.072570668\n44  -0.62247125  0.062370382\n45   1.35450804 -0.121366316\n46   0.20177100  0.005892888\n47  -0.02078929 -0.013791520\n48  -2.26606243  0.208550251\n49  -0.61265117  0.051465741\n50   2.28265601 -0.208111972\n51  -0.69648204  0.049844088\n52  -0.90954843  0.067366763\n53   2.86086261",
        " -0.232865613\n54   0.64107333 -0.074085601\n55  -2.50861566  0.192442071\n56  -0.14415572  0.007115389\n57  -2.80554237  0.241556549\n58   1.75944076 -0.126488906\n59  -1.68024885  0.141406264\n60  -2.84510196  0.251453827\n61   1.61352443 -0.124578081\n62   1.50756016 -0.135037156\n63   0.59132744 -0.044723322\n64   3.73918453 -0.308268291\n65   2.45234814 -0.220397788\n66   1.03733197 -0.058445288\n67   2.66082354 -0.227526069\n68   1.46921309 -0.131443741\n69   1.63166550 -0.140435755\n70   0.43378635 -0.053210430\n71  -0.30351761",
        "  0.025705771\n72   1.51758455 -0.131131939\n73   0.31830478 -0.015358480\n74   0.11917146 -0.010920052\n75   3.21937801 -0.282591050\n76  -0.44752241  0.034897759\n77  -2.07421760  0.189805156\n78   0.20218552 -0.032347963\n79  -0.03079998  0.023590148\n80  -0.35201798 -0.007108531\n81  -1.59892551  0.137191741\n82  -4.47259281  0.356549044\n83   1.94061207 -0.169805276\n84   2.34329550 -0.194455692\n85   2.59038066 -0.230546280\n86  -2.63669093  0.211968413\n87  -2.15950668  0.182295946\n88  -0.50307369  0.043046426\n89  -0.24684183",
        "  0.033388043\n90  -1.31095047  0.116798271\n91   0.17151990 -0.024759656\n92  -0.79771656  0.067134422\n93  -0.94261942  0.087295289\n94   0.90471914 -0.082321802\n95   0.32102824 -0.049803302\n96   0.61116278 -0.045875786\n97  -2.32751564  0.214605064\n98   2.31222739 -0.201619723\n99  -0.11828481  0.029049313\n100 -2.48332475  0.229068557\n\nwith conditional variances for “class” \n",
        "> ",
        "# Predictions depend on classroom",
        "> ",
        "# Works just like simple linear regression",
        "> ",
        "sample_preds[1, ]",
        "\u001B[38;5;246m# A tibble: 1 x 7\u001B[39m\n  pupil class extrav sex    texp popular popteach\n  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m     1     1      5 girl     24     6.3        6\n",
        "> ",
        "f[1] + f[2]*5",
        "(Intercept) \n   4.925309 \n",
        "> ",
        "# Add in the random effects for the corresponding classroom",
        "> ",
        "head(r$class)",
        "  (Intercept)      extrav\n1   0.3409595 -0.02701468\n2  -1.1779895  0.09697467\n3  -0.6293700  0.05709718\n4   1.0852971 -0.09995304\n5  -0.1948964  0.02160180\n6  -0.9833923  0.08376253\n",
        "> ",
        "sample_preds",
        "\u001B[38;5;246m# A tibble: 4 x 7\u001B[39m\n  pupil class extrav sex    texp popular popteach\n  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m     1     1      5 girl     24     6.3        6\n\u001B[38;5;250m2\u001B[39m     1     2      8 girl     14     6.4        6\n\u001B[38;5;250m3\u001B[39m     1     3      5 boy      13     4.2        4\n\u001B[38;5;250m4\u001B[39m     1     4      3 girl     20     4.1        4\n",
        "> ",
        "head(r$class, n = 4)",
        "  (Intercept)      extrav\n1   0.3409595 -0.02701468\n2  -1.1779895  0.09697467\n3  -0.6293700  0.05709718\n4   1.0852971 -0.09995304\n",
        "> ",
        "fixef(m)",
        "(Intercept)      extrav \n  2.4610234   0.4928571 \n",
        "> ",
        "predict(m, newdata = sample_preds)",
        "       1        2        3        4 \n5.131195 6.001688 4.581425 4.725033 \n",
        "> ",
        "# We can use the expand.grid() function to create different conditions. Compare slopes across the first five classrooms",
        "> ",
        "conditions <- expand.grid(extrav = 1:10, class = 1:5)",
        "> ",
        "head(conditions)",
        "  extrav class\n1      1     1\n2      2     1\n3      3     1\n4      4     1\n5      5     1\n6      6     1\n",
        "> ",
        "tail(conditions)",
        "   extrav class\n45      5     5\n46      6     5\n47      7     5\n48      8     5\n49      9     5\n50     10     5\n",
        "> ",
        "# Make predictions",
        "> ",
        "conditions %>% ",
        "+ ",
        "  mutate(model_pred = predict(m, newdata = conditions))",
        "   extrav class model_pred\n1       1     1   3.267825\n2       2     1   3.733668\n3       3     1   4.199510\n4       4     1   4.665353\n5       5     1   5.131195\n6       6     1   5.597038\n7       7     1   6.062880\n8       8     1   6.528722\n9       9     1   6.994565\n10     10     1   7.460407\n11      1     2   1.872866\n12      2     2   2.462697\n13      3     2   3.052529\n14      4     2   3.642361\n15      5     2   4.232193\n16      6     2   4.822025\n17      7     2   5.411856\n18      8     2   6.001688",
        "\n19      9     2   6.591520\n20     10     2   7.181352\n21      1     3   2.381608\n22      2     3   2.931562\n23      3     3   3.481516\n24      4     3   4.031471\n25      5     3   4.581425\n26      6     3   5.131379\n27      7     3   5.681333\n28      8     3   6.231288\n29      9     3   6.781242\n30     10     3   7.331196\n31      1     4   3.939225\n32      2     4   4.332129\n33      3     4   4.725033\n34      4     4   5.117937\n35      5     4   5.510841\n36      6     4   5.903745\n37      7     4   6.296649",
        "\n38      8     4   6.689553\n39      9     4   7.082457\n40     10     4   7.475361\n41      1     5   2.780586\n42      2     5   3.295045\n43      3     5   3.809504\n44      4     5   4.323963\n45      5     5   4.838422\n46      6     5   5.352880\n47      7     5   5.867339\n48      8     5   6.381798\n49      9     5   6.896257\n50     10     5   7.410716\n",
        "> ",
        "# Plot",
        "> ",
        "conditions %>%",
        "+ ",
        "  mutate(model_pred = predict(m, newdata = conditions)) %>%",
        "+ ",
        "  ggplot(aes(extrav, model_pred)) +",
        "+ ",
        "  geom_line(aes(group = class))",
        "> ",
        "# One more quick example",
        "> ",
        "# Model an interaction",
        "> ",
        "m2 <- lmer(popular ~ extrav*sex + (extrav|class), popular,",
        "+ ",
        "          control = lmerControl(optimizer = \"bobyqa\"))",
        "> ",
        "arm::display(m2)",
        "lmer(formula = popular ~ extrav * sex + (extrav | class), data = popular, \n    control = lmerControl(optimizer = \"bobyqa\"))\n               coef.est coef.se\n(Intercept)    2.23     0.20   \nextrav         0.41     0.03   \nsexgirl        0.95     0.16   \nextrav:sexgirl 0.06     0.03   \n\nError terms:\n Groups   Name        Std.Dev. Corr  \n class    (Intercept) 1.63           \n          extrav      0.18     -0.94 \n Residual             0.74           \n---\nnumber of obs: 2000, groups: class, 100\nAIC = 4890.7, DIC = ",
        "4836.6\ndeviance = 4855.7 \n",
        "> ",
        "# Marginal effect",
        "> ",
        "# Interaction between extraversion and sex",
        "> ",
        "conditions2 <- expand.grid(extrav = 1:10, ",
        "+ ",
        "                           sex = c(\"girl\", \"boy\"), ",
        "+ ",
        "                           class = 0) %>% ",
        "+ ",
        "  mutate(pred = predict(m2, ",
        "+ ",
        "                        newdata = ., ",
        "+ ",
        "                        allow.new.levels = TRUE))",
        "> ",
        "conditions2",
        "   extrav  sex class     pred\n1       1 girl     0 3.654686\n2       2 girl     0 4.124926\n3       3 girl     0 4.595165\n4       4 girl     0 5.065404\n5       5 girl     0 5.535643\n6       6 girl     0 6.005883\n7       7 girl     0 6.476122\n8       8 girl     0 6.946361\n9       9 girl     0 7.416600\n10     10 girl     0 7.886840\n11      1  boy     0 2.645470\n12      2  boy     0 3.059526\n13      3  boy     0 3.473583\n14      4  boy     0 3.887640\n15      5  boy     0 4.301697\n16      6  boy     0 4.715754\n17",
        "      7  boy     0 5.129811\n18      8  boy     0 5.543868\n19      9  boy     0 5.957925\n20     10  boy     0 6.371982\n",
        "> ",
        "#Plot",
        "> ",
        "ggplot(conditions2, aes(extrav, pred)) +",
        "+ ",
        "  geom_line(aes(color = sex))",
        "> ",
        "m <- lm(mpg ~ disp + hp + drat, data = mtcars)",
        "> ",
        "# simulate",
        "> ",
        "n <- 1000",
        "> ",
        "intercept <- 100",
        "> ",
        "b1 <- 5",
        "> ",
        "b2 <- -3",
        "> ",
        "b3 <- 0.5",
        "> ",
        "sigma <- 4.5",
        "> ",
        "set.seed(123)",
        "> ",
        "x1 <- rnorm(n, sd = 1)",
        "> ",
        "x2 <- rnorm(n, sd = 2)",
        "> ",
        "x3 <- rnorm(n, sd = 4)",
        "> ",
        "# Create y-hat",
        "> ",
        "yhat <- intercept + b1*x1 + b2*x2 + b3*x3",
        "> ",
        "# Generate data & test",
        "> ",
        "sim <- rnorm(n, yhat, sigma)",
        "> ",
        "summary(lm(sim ~ x1 + x2 + x3))",
        "\nCall:\nlm(formula = sim ~ x1 + x2 + x3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.7528  -2.8505   0.0021   3.0387  13.0151 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 99.96508    0.14141  706.92   <2e-16 ***\nx1           4.99415    0.14306   34.91   <2e-16 ***\nx2          -3.01827    0.07027  -42.95   <2e-16 ***\nx3           0.55792    0.03613   15.44   <2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error:",
        " 4.466 on 996 degrees of freedom\nMultiple R-squared:  0.7514,\tAdjusted R-squared:  0.7506 \nF-statistic:  1003 on 3 and 996 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "library(equatiomatic)",
        "> ",
        "hsb_m0 <- lmer(math ~ ses + (1|sch.id), data = hsb)",
        "> ",
        "# Set some parameters",
        "> ",
        "j <- 30 # 30 schools",
        "> ",
        "nj <- 50 # 50 students per school",
        "> ",
        "# Simulate the school distribution",
        "> ",
        "a_j <- rnorm(j, 0, 2.18)",
        "> ",
        "# Using a for() loop here in an effort to be transparent",
        "> ",
        "school_scores <- vector(\"list\", j)",
        "> ",
        "ses <- vector(\"list\", j)",
        "> ",
        "for(i in 1:j) {",
        "+ ",
        "  ses[[i]] <- rnorm(nj)",
        "+ ",
        "  school_scores[[i]] <- rnorm(nj, ",
        "+ ",
        "                              12.66 + 2.39*ses[[i]] + a_j[i], ",
        "+ ",
        "                              6.09)",
        "+ ",
        "}",
        "> ",
        "sim_df <- data.frame(",
        "+ ",
        "  scid = rep(1:j, each = nj),",
        "+ ",
        "  ses = unlist(ses),",
        "+ ",
        "  score = unlist(school_scores)",
        "+ ",
        ")",
        "> ",
        "# Test it out",
        "> ",
        "sim_m0 <- lmer(score ~ ses + (1|scid), data = sim_df)",
        "> ",
        "summary(sim_m0)",
        "Linear mixed model fit by REML ['lmerMod']\nFormula: score ~ ses + (1 | scid)\n   Data: sim_df\n\nREML criterion at convergence: 9704.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1418 -0.6848  0.0030  0.6552  3.5886 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n scid     (Intercept)  5.685   2.384   \n Residual             36.187   6.016   \nNumber of obs: 1500, groups:  scid, 30\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)  12.3901     0.4622   26.81\nses        ",
        "   2.4682     0.1562   15.80\n\nCorrelation of Fixed Effects:\n    (Intr)\nses -0.002\n",
        "> ",
        "# Add a school-level predictor",
        "> ",
        "hsb_m1 <- lmer(math ~ ses + sector + (1|sch.id), data = hsb)",
        "> ",
        "extract_eq(hsb_m1)",
        "Registered S3 method overwritten by 'broom.mixed':\n  method      from \n  tidy.gamlss broom\n",
        "$$\n\\begin{aligned}\n  \\operatorname{math}_{i}  &\\sim N \\left(\\alpha_{j[i]} + \\beta_{1}(\\operatorname{ses}), \\sigma^2 \\right) \\\\\n    \\alpha_{j}  &\\sim N \\left(\\gamma_{0}^{\\alpha} + \\gamma_{1}^{\\alpha}(\\operatorname{sector}), \\sigma^2_{\\alpha_{j}} \\right)\n    \\text{, for sch.id j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$",
        "Warning message:\n",
        "In checkMatrixPackageVersion() :",
        " Package version inconsistency detected.\nTMB was built with Matrix version 1.3.2\nCurrent Matrix version is 1.2.18\nPlease re-install 'TMB' from source using install.packages('TMB', type = 'source') or ask CRAN for a binary version of 'TMB' matching CRAN's 'Matrix' package\n",
        "> ",
        "library(TMB)",
        "> ",
        "extract_eq(hsb_m1)",
        "$$\n\\begin{aligned}\n  \\operatorname{math}_{i}  &\\sim N \\left(\\alpha_{j[i]} + \\beta_{1}(\\operatorname{ses}), \\sigma^2 \\right) \\\\\n    \\alpha_{j}  &\\sim N \\left(\\gamma_{0}^{\\alpha} + \\gamma_{1}^{\\alpha}(\\operatorname{sector}), \\sigma^2_{\\alpha_{j}} \\right)\n    \\text{, for sch.id j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$",
        "> ",
        "# Add a random slope",
        "> ",
        "hsb_m2 <- lmer(math ~ ses + sector + (ses|sch.id), data = hsb)",
        "> ",
        "extract_eq(hsb_m2)",
        "$$\n\\begin{aligned}\n  \\operatorname{math}_{i}  &\\sim N \\left(\\alpha_{j[i]} + \\beta_{1j[i]}(\\operatorname{ses}), \\sigma^2 \\right) \\\\    \n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\alpha_{j} \\\\\n      &\\beta_{1j}\n    \\end{aligned}\n  \\end{array}\n\\right)\n  &\\sim MVN \\left(\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\gamma_{0}^{\\alpha} + \\gamma_{1}^{\\alpha}(\\operatorname{sector}) \\\\\n      &\\mu_{\\beta_{1j}}\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{cc}\n     \\sigma^2_{\\alpha_{j}} & \\rho_{\\alpha_{j}\\beta_{1j}} \\\\ \n     \\rho_{\\beta_{1j}\\alpha_{j}} & \\sigma^2_{\\beta_{1j}}\n  \\end{array}\n\\right)\n \\right)\n    \\text{, for sch.id j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$",
        "> ",
        "# Include sector as a predictor of the relation between ses and math",
        "> ",
        "hsb_m3 <- lmer(math ~ ses * sector + (ses|sch.id), data = hsb,",
        "+ ",
        "               control = lmerControl(optimizer = \"nmkbw\"))",
        "Error in loadNamespace(name) : there is no package called ‘dfoptim’\n",
        "> ",
        "extract_eq(hsb_m3)",
        "Error in extract_eq(hsb_m3) : object 'hsb_m3' not found\n",
        "> ",
        "# Include sector as a predictor of the relation between ses and math",
        "> ",
        "hsb_m3 <- lmer(math ~ ses * sector + (ses|sch.id), data = hsb,",
        "+ ",
        "               control = lmerControl(optimizer = \"nmkbw\"))",
        "Error in loadNamespace(name) : there is no package called ‘dfoptim’\n",
        "> ",
        "hsb_m3",
        "Error: object 'hsb_m3' not found\n",
        "> ",
        "# Include sector as a predictor of the relation between ses and math",
        "> ",
        "hsb_m3 <- lmer(math ~ ses * sector + (ses|sch.id), data = hsb,",
        "+ ",
        "               control = lmerControl(optimizer = \"nmkbw\"))",
        "Error in loadNamespace(name) : there is no package called ‘dfoptim’\n",
        "> ",
        "# Include sector as a predictor of the relation between ses and math",
        "> ",
        "hsb_m3 <- lmer(math ~ ses * sector + (ses|sch.id), data = hsb,",
        "+ ",
        "               control = lmerControl(optimizer = \"nmkbw\"))",
        "Error in loadNamespace(name) : there is no package called ‘dfoptim’\n",
        "> ",
        "?lmerControl",
        "> ",
        "install.packages(\"dfoptim\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/dfoptim_2020.10-1.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 73745 bytes (72 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 72 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/36/f7g4pqsd6dq83bglv045z0640000gn/T//RtmpTJ8GLs/downloaded_packages\n",
        "> ",
        "library(dfoptim)",
        "> ",
        "# Include sector as a predictor of the relation between ses and math",
        "> ",
        "hsb_m3 <- lmer(math ~ ses * sector + (ses|sch.id), data = hsb,",
        "+ ",
        "               control = lmerControl(optimizer = \"nmkbw\"))",
        "> ",
        "extract_eq(hsb_m3)",
        "$$\n\\begin{aligned}\n  \\operatorname{math}_{i}  &\\sim N \\left(\\alpha_{j[i]} + \\beta_{1j[i]}(\\operatorname{ses}), \\sigma^2 \\right) \\\\    \n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\alpha_{j} \\\\\n      &\\beta_{1j}\n    \\end{aligned}\n  \\end{array}\n\\right)\n  &\\sim MVN \\left(\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\gamma_{0}^{\\alpha} + \\gamma_{1}^{\\alpha}(\\operatorname{sector}) \\\\\n      &\\gamma^{\\beta_{1}}_{0} + \\gamma^{\\beta_{1}}_{1}(\\operatorname{sector})\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{cc}\n     \\sigma^2_{\\alpha_{j}} & \\rho_{\\alpha_{j}\\beta_{1j}} \\\\ \n     \\rho_{\\beta_{1j}\\alpha_{j}} & \\sigma^2_{\\beta_{1j}}\n  \\end{array}\n\\right)\n \\right)\n    \\text{, for sch.id j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$",
        "> ",
        "hsb_m4 <- lmer(",
        "+ ",
        "  math ~ ses * sector + minority + female + meanses + size +",
        "+ ",
        "    (ses + minority + female|sch.id), ",
        "+ ",
        "  data = hsb",
        "+ ",
        ")",
        "boundary (singular) fit: see ?isSingular\n",
        "Warning message:\n",
        "Some predictor variables are on very different scales: consider rescaling \n",
        "> ",
        "extract_eq(hsb_m4)",
        "$$\n\\begin{aligned}\n  \\operatorname{math}_{i}  &\\sim N \\left(\\mu, \\sigma^2 \\right) \\\\\n    \\mu &=\\alpha_{j[i]} + \\beta_{1j[i]}(\\operatorname{ses}) + \\beta_{3j[i]}(\\operatorname{minority}) + \\beta_{0j[i]}(\\operatorname{female}) \\\\    \n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\alpha_{j} \\\\\n      &\\beta_{1j} \\\\\n      &\\beta_{3j} \\\\\n      &\\beta_{0j}\n    \\end{aligned}\n  \\end{array}\n\\right)\n  &\\sim MVN \\left(\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\gamma_{0}^{\\alpha} + \\gamma_{1}^{\\alpha}(\\operatorname{sector}) + \\gamma_{2}^{\\alpha}(\\operatorname{meanses}) + \\gamma_{3}^{\\alpha}(\\operatorname{size}) \\\\\n      &\\gamma^{\\beta_{1}}_{0} + \\gamma^{\\beta_{1}}_{1}(\\operatorname{sector}) \\\\\n      &\\mu_{\\beta_{3j}} \\\\\n      &\\mu_{\\beta_{0j}}\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{cccc}\n     \\sigma^2_{\\alpha_{j}} & \\rho_{\\alpha_{j}\\beta_{1j}} & \\rho_{\\alpha_{j}\\beta_{3j}} & \\rho_{\\alpha_{j}\\beta_{0j}} \\\\ \n     \\rho_{\\beta_{1j}\\alpha_{j}} & \\sigma^2_{\\beta_{1j}} & \\rho_{\\beta_{1j}\\beta_{3j}} & \\rho_{\\beta_{1j}\\beta_{0j}} \\\\ \n     \\rho_{\\beta_{3j}\\alpha_{j}} & \\rho_{\\beta_{3j}\\beta_{1j}} & \\sigma^2_{\\beta_{3j}} & \\rho_{\\beta_{3j}\\beta_{0j}} \\\\ \n     \\rho_{\\beta_{0j}\\alpha_{j}} & \\rho_{\\beta_{0j}\\beta_{1j}} & \\rho_{\\beta_{0j}\\beta_{3j}} & \\sigma^2_{\\beta_{0j}}\n  \\end{array}\n\\right)\n \\right)\n    \\text{, for sch.id j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$",
        "> ",
        "head(sim_longitudinal)",
        "\u001B[38;5;246m# A tibble: 6 x 8\u001B[39m\n\u001B[38;5;246m# Groups:   school [1]\u001B[39m\n    sid school district group  treatment prop_low  wave score\n  \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m     1      1        1 medium 1            0.143     0  102.\n\u001B[38;5;250m2\u001B[39m     1      1        1 medium 1            0.143     1  102.\n",
        "\u001B[38;5;250m3\u001B[39m     1      1        1 medium 1            0.143     2  103.\n\u001B[38;5;250m4\u001B[39m     1      1        1 medium 1            0.143     3  102.\n\u001B[38;5;250m5\u001B[39m     1      1        1 medium 1            0.143     4  102.\n\u001B[38;5;250m6\u001B[39m     1      1        1 medium 1            0.143     5  103.\n",
        "> ",
        "# Model doesn't really fit again",
        "> ",
        "sl_m <- lmer(",
        "+ ",
        "  score ~ wave*treatment + group + prop_low +",
        "+ ",
        "    (wave|sid) + (wave + treatment| school) + (1|district),",
        "+ ",
        "  data = sim_longitudinal",
        "+ ",
        ")",
        "boundary (singular) fit: see ?isSingular\n",
        "> ",
        "extract_eq(sl_m)",
        "$$\n\\begin{aligned}\n  \\operatorname{score}_{i}  &\\sim N \\left(\\alpha_{j[i],k[i],l[i]} + \\beta_{1j[i],k[i]}(\\operatorname{wave}), \\sigma^2 \\right) \\\\    \n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\alpha_{j} \\\\\n      &\\beta_{1j}\n    \\end{aligned}\n  \\end{array}\n\\right)\n  &\\sim MVN \\left(\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\gamma_{0}^{\\alpha} + \\gamma_{1k[i]}^{\\alpha}(\\operatorname{treatment}_{\\operatorname{1}}) + \\gamma_{2}^{\\alpha}(\\operatorname{group}_{\\operatorname{low}}) + \\gamma_{3}^{\\alpha}(\\operatorname{group}_{\\operatorname{medium}}) \\\\\n      &\\gamma^{\\beta_{1}}_{0} + \\gamma^{\\beta_{1}}_{1}(\\operatorname{treatment}_{\\operatorname{1}})\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{cc}\n     \\sigma^2_{\\alpha_{j}} & \\rho_{\\alpha_{j}\\beta_{1j}} \\\\ \n     \\rho_{\\beta_{1j}\\alpha_{j}} & \\sigma^2_{\\beta_{1j}}\n  \\end{array}\n\\right)\n \\right)\n    \\text{, for sid j = 1,} \\dots \\text{,J} \\\\    \n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\alpha_{k} \\\\\n      &\\beta_{1k} \\\\\n      &\\gamma_{1k}\n    \\end{aligned}\n  \\end{array}\n\\right)\n  &\\sim MVN \\left(\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\gamma_{0}^{\\alpha} + \\gamma_{1}^{\\alpha}(\\operatorname{prop\\_low}) \\\\\n      &\\mu_{\\beta_{1k}} \\\\\n      &\\mu_{\\gamma_{1k}}\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{ccc}\n     \\sigma^2_{\\alpha_{k}} & \\rho_{\\alpha_{k}\\beta_{1k}} & \\rho_{\\alpha_{k}\\gamma_{1k}} \\\\ \n     \\rho_{\\beta_{1k}\\alpha_{k}} & \\sigma^2_{\\beta_{1k}} & \\rho_{\\beta_{1k}\\gamma_{1k}} \\\\ \n     \\rho_{\\gamma_{1k}\\alpha_{k}} & \\rho_{\\gamma_{1k}\\beta_{1k}} & \\sigma^2_{\\gamma_{1k}}\n  \\end{array}\n\\right)\n \\right)\n    \\text{, for school k = 1,} \\dots \\text{,K} \\\\    \\alpha_{l}  &\\sim N \\left(\\mu_{\\alpha_{l}}, \\sigma^2_{\\alpha_{l}} \\right)\n    \\text{, for district l = 1,} \\dots \\text{,L}\n\\end{aligned}\n$$",
        "> ",
        "willett <- read_csv(here::here(\"data\", \"willett-1988.csv\"))",
        "Error: '/Users/brockrowley/Phd in SPED/2021Spring/HLM2/HLM2_Notes/data/willett-1988.csv' does not exist.\n",
        "> ",
        "willett <- read_csv(here::here(\"data\", \"willett-1988.csv\"))",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────\u001B[39m\ncols(\n  id = \u001B[32mcol_double()\u001B[39m,\n  time = \u001B[32mcol_double()\u001B[39m,\n  opp = \u001B[32mcol_double()\u001B[39m,\n  cog = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "> ",
        "bad <- lm(opp ~ time, data = willett)",
        "> ",
        "summary(bad)",
        "\nCall:\nlm(formula = opp ~ time, data = willett)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-88.374 -25.584   1.186  28.926  64.746 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  164.374      5.035   32.65   <2e-16 ***\ntime          26.960      2.691   10.02   <2e-16 ***\n---\nSignif. codes:  \n0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 35.6 on 138 degrees of freedom\nMultiple R-squared:  0.421,\tAdjusted R-squared:  0.4168",
        " \nF-statistic: 100.3 on 1 and 138 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "# Fit a parallel slopes model with Willett data",
        "> ",
        "w0 <- lmer(opp ~ time + (1|id), willett)",
        "> ",
        "library(sundry)",
        "> ",
        "# Use sundry to pull residual variance-covariance",
        "> ",
        "w0_rvcv <- pull_residual_vcov(w0)",
        "Error in pull_residual_vcov(w0) : \n  could not find function \"pull_residual_vcov\"\n",
        "> ",
        "library(sundry)",
        "> ",
        "?sundry",
        "> ",
        "?pull_residual_vcov",
        "No documentation for ‘pull_residual_vcov’ in specified packages and libraries:\nyou could try ‘??pull_residual_vcov’\n",
        "> ",
        "??pull_residual_vcov",
        "> ",
        "install.packages(\"remotes\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n",
        "Error: C stack usage  7969344 is too close to the limit\n",
        "Error saving session (options): R code execution error\n"
    ]
}